/*
 * Saxobank trading API
 * Saxobank trading API
 *
 * OpenAPI spec version: 0.1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * OrderActivitiesDisplayAndFormat
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T18:24:56.181779897Z[GMT]")

public class OrderActivitiesDisplayAndFormat {
  @SerializedName("Currency")
  private String currency = null;

  @SerializedName("Decimals")
  private Integer decimals = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("OrderDecimals")
  private Integer orderDecimals = null;

  @SerializedName("Symbol")
  private String symbol = null;

  public OrderActivitiesDisplayAndFormat currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public OrderActivitiesDisplayAndFormat decimals(Integer decimals) {
    this.decimals = decimals;
    return this;
  }

   /**
   * Get decimals
   * @return decimals
  **/
  @Schema(description = "")
  public Integer getDecimals() {
    return decimals;
  }

  public void setDecimals(Integer decimals) {
    this.decimals = decimals;
  }

  public OrderActivitiesDisplayAndFormat description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OrderActivitiesDisplayAndFormat orderDecimals(Integer orderDecimals) {
    this.orderDecimals = orderDecimals;
    return this;
  }

   /**
   * Get orderDecimals
   * @return orderDecimals
  **/
  @Schema(description = "")
  public Integer getOrderDecimals() {
    return orderDecimals;
  }

  public void setOrderDecimals(Integer orderDecimals) {
    this.orderDecimals = orderDecimals;
  }

  public OrderActivitiesDisplayAndFormat symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderActivitiesDisplayAndFormat orderActivitiesDisplayAndFormat = (OrderActivitiesDisplayAndFormat) o;
    return Objects.equals(this.currency, orderActivitiesDisplayAndFormat.currency) &&
        Objects.equals(this.decimals, orderActivitiesDisplayAndFormat.decimals) &&
        Objects.equals(this.description, orderActivitiesDisplayAndFormat.description) &&
        Objects.equals(this.orderDecimals, orderActivitiesDisplayAndFormat.orderDecimals) &&
        Objects.equals(this.symbol, orderActivitiesDisplayAndFormat.symbol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, decimals, description, orderDecimals, symbol);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderActivitiesDisplayAndFormat {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    orderDecimals: ").append(toIndentedString(orderDecimals)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
