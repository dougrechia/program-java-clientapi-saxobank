/*
 * Saxobank trading API
 * Saxobank trading API
 *
 * OpenAPI spec version: 0.1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Openapitradev2ordersOrderDuration;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * OrderActivitiesSleepingOrderCondition
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-24T20:27:51.004902788Z[GMT]")

public class OrderActivitiesSleepingOrderCondition {
  @SerializedName("BreakoutTriggerDownPrice")
  private BigDecimal breakoutTriggerDownPrice = null;

  @SerializedName("BreakoutTriggerUpPrice")
  private BigDecimal breakoutTriggerUpPrice = null;

  @SerializedName("BuySell")
  private String buySell = null;

  @SerializedName("ConditionId")
  private String conditionId = null;

  @SerializedName("Duration")
  private Openapitradev2ordersOrderDuration duration = null;

  @SerializedName("OrderType")
  private String orderType = null;

  @SerializedName("Price")
  private BigDecimal price = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("SubStatus")
  private String subStatus = null;

  @SerializedName("Symbol")
  private String symbol = null;

  @SerializedName("TrailingStopDistanceToMarket")
  private BigDecimal trailingStopDistanceToMarket = null;

  @SerializedName("TriggerPriceType")
  private String triggerPriceType = null;

  @SerializedName("Uic")
  private Integer uic = null;

  public OrderActivitiesSleepingOrderCondition breakoutTriggerDownPrice(BigDecimal breakoutTriggerDownPrice) {
    this.breakoutTriggerDownPrice = breakoutTriggerDownPrice;
    return this;
  }

   /**
   * Get breakoutTriggerDownPrice
   * @return breakoutTriggerDownPrice
  **/
  @Schema(description = "")
  public BigDecimal getBreakoutTriggerDownPrice() {
    return breakoutTriggerDownPrice;
  }

  public void setBreakoutTriggerDownPrice(BigDecimal breakoutTriggerDownPrice) {
    this.breakoutTriggerDownPrice = breakoutTriggerDownPrice;
  }

  public OrderActivitiesSleepingOrderCondition breakoutTriggerUpPrice(BigDecimal breakoutTriggerUpPrice) {
    this.breakoutTriggerUpPrice = breakoutTriggerUpPrice;
    return this;
  }

   /**
   * Get breakoutTriggerUpPrice
   * @return breakoutTriggerUpPrice
  **/
  @Schema(description = "")
  public BigDecimal getBreakoutTriggerUpPrice() {
    return breakoutTriggerUpPrice;
  }

  public void setBreakoutTriggerUpPrice(BigDecimal breakoutTriggerUpPrice) {
    this.breakoutTriggerUpPrice = breakoutTriggerUpPrice;
  }

  public OrderActivitiesSleepingOrderCondition buySell(String buySell) {
    this.buySell = buySell;
    return this;
  }

   /**
   * Get buySell
   * @return buySell
  **/
  @Schema(description = "")
  public String getBuySell() {
    return buySell;
  }

  public void setBuySell(String buySell) {
    this.buySell = buySell;
  }

  public OrderActivitiesSleepingOrderCondition conditionId(String conditionId) {
    this.conditionId = conditionId;
    return this;
  }

   /**
   * Get conditionId
   * @return conditionId
  **/
  @Schema(description = "")
  public String getConditionId() {
    return conditionId;
  }

  public void setConditionId(String conditionId) {
    this.conditionId = conditionId;
  }

  public OrderActivitiesSleepingOrderCondition duration(Openapitradev2ordersOrderDuration duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Openapitradev2ordersOrderDuration getDuration() {
    return duration;
  }

  public void setDuration(Openapitradev2ordersOrderDuration duration) {
    this.duration = duration;
  }

  public OrderActivitiesSleepingOrderCondition orderType(String orderType) {
    this.orderType = orderType;
    return this;
  }

   /**
   * Get orderType
   * @return orderType
  **/
  @Schema(description = "")
  public String getOrderType() {
    return orderType;
  }

  public void setOrderType(String orderType) {
    this.orderType = orderType;
  }

  public OrderActivitiesSleepingOrderCondition price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public OrderActivitiesSleepingOrderCondition status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public OrderActivitiesSleepingOrderCondition subStatus(String subStatus) {
    this.subStatus = subStatus;
    return this;
  }

   /**
   * Get subStatus
   * @return subStatus
  **/
  @Schema(description = "")
  public String getSubStatus() {
    return subStatus;
  }

  public void setSubStatus(String subStatus) {
    this.subStatus = subStatus;
  }

  public OrderActivitiesSleepingOrderCondition symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public OrderActivitiesSleepingOrderCondition trailingStopDistanceToMarket(BigDecimal trailingStopDistanceToMarket) {
    this.trailingStopDistanceToMarket = trailingStopDistanceToMarket;
    return this;
  }

   /**
   * Get trailingStopDistanceToMarket
   * @return trailingStopDistanceToMarket
  **/
  @Schema(description = "")
  public BigDecimal getTrailingStopDistanceToMarket() {
    return trailingStopDistanceToMarket;
  }

  public void setTrailingStopDistanceToMarket(BigDecimal trailingStopDistanceToMarket) {
    this.trailingStopDistanceToMarket = trailingStopDistanceToMarket;
  }

  public OrderActivitiesSleepingOrderCondition triggerPriceType(String triggerPriceType) {
    this.triggerPriceType = triggerPriceType;
    return this;
  }

   /**
   * Get triggerPriceType
   * @return triggerPriceType
  **/
  @Schema(description = "")
  public String getTriggerPriceType() {
    return triggerPriceType;
  }

  public void setTriggerPriceType(String triggerPriceType) {
    this.triggerPriceType = triggerPriceType;
  }

  public OrderActivitiesSleepingOrderCondition uic(Integer uic) {
    this.uic = uic;
    return this;
  }

   /**
   * Get uic
   * @return uic
  **/
  @Schema(description = "")
  public Integer getUic() {
    return uic;
  }

  public void setUic(Integer uic) {
    this.uic = uic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderActivitiesSleepingOrderCondition orderActivitiesSleepingOrderCondition = (OrderActivitiesSleepingOrderCondition) o;
    return Objects.equals(this.breakoutTriggerDownPrice, orderActivitiesSleepingOrderCondition.breakoutTriggerDownPrice) &&
        Objects.equals(this.breakoutTriggerUpPrice, orderActivitiesSleepingOrderCondition.breakoutTriggerUpPrice) &&
        Objects.equals(this.buySell, orderActivitiesSleepingOrderCondition.buySell) &&
        Objects.equals(this.conditionId, orderActivitiesSleepingOrderCondition.conditionId) &&
        Objects.equals(this.duration, orderActivitiesSleepingOrderCondition.duration) &&
        Objects.equals(this.orderType, orderActivitiesSleepingOrderCondition.orderType) &&
        Objects.equals(this.price, orderActivitiesSleepingOrderCondition.price) &&
        Objects.equals(this.status, orderActivitiesSleepingOrderCondition.status) &&
        Objects.equals(this.subStatus, orderActivitiesSleepingOrderCondition.subStatus) &&
        Objects.equals(this.symbol, orderActivitiesSleepingOrderCondition.symbol) &&
        Objects.equals(this.trailingStopDistanceToMarket, orderActivitiesSleepingOrderCondition.trailingStopDistanceToMarket) &&
        Objects.equals(this.triggerPriceType, orderActivitiesSleepingOrderCondition.triggerPriceType) &&
        Objects.equals(this.uic, orderActivitiesSleepingOrderCondition.uic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(breakoutTriggerDownPrice, breakoutTriggerUpPrice, buySell, conditionId, duration, orderType, price, status, subStatus, symbol, trailingStopDistanceToMarket, triggerPriceType, uic);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderActivitiesSleepingOrderCondition {\n");
    
    sb.append("    breakoutTriggerDownPrice: ").append(toIndentedString(breakoutTriggerDownPrice)).append("\n");
    sb.append("    breakoutTriggerUpPrice: ").append(toIndentedString(breakoutTriggerUpPrice)).append("\n");
    sb.append("    buySell: ").append(toIndentedString(buySell)).append("\n");
    sb.append("    conditionId: ").append(toIndentedString(conditionId)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subStatus: ").append(toIndentedString(subStatus)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    trailingStopDistanceToMarket: ").append(toIndentedString(trailingStopDistanceToMarket)).append("\n");
    sb.append("    triggerPriceType: ").append(toIndentedString(triggerPriceType)).append("\n");
    sb.append("    uic: ").append(toIndentedString(uic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
