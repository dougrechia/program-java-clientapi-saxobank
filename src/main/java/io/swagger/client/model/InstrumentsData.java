/*
 * Saxobank trading API
 * Saxobank trading API
 *
 * OpenAPI spec version: 0.1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InstrumentsData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T18:24:56.181779897Z[GMT]")

public class InstrumentsData {
  @SerializedName("AssetType")
  private String assetType = null;

  @SerializedName("CurrencyCode")
  private String currencyCode = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ExchangeId")
  private String exchangeId = null;

  @SerializedName("GroupId")
  private Long groupId = null;

  @SerializedName("Identifier")
  private Long identifier = null;

  @SerializedName("SummaryType")
  private String summaryType = null;

  @SerializedName("Symbol")
  private String symbol = null;

  @SerializedName("TradableAs")
  private List<String> tradableAs = null;

  public InstrumentsData assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @Schema(description = "")
  public String getAssetType() {
    return assetType;
  }

  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }

  public InstrumentsData currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @Schema(description = "")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public InstrumentsData description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InstrumentsData exchangeId(String exchangeId) {
    this.exchangeId = exchangeId;
    return this;
  }

   /**
   * Get exchangeId
   * @return exchangeId
  **/
  @Schema(description = "")
  public String getExchangeId() {
    return exchangeId;
  }

  public void setExchangeId(String exchangeId) {
    this.exchangeId = exchangeId;
  }

  public InstrumentsData groupId(Long groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @Schema(description = "")
  public Long getGroupId() {
    return groupId;
  }

  public void setGroupId(Long groupId) {
    this.groupId = groupId;
  }

  public InstrumentsData identifier(Long identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @Schema(description = "")
  public Long getIdentifier() {
    return identifier;
  }

  public void setIdentifier(Long identifier) {
    this.identifier = identifier;
  }

  public InstrumentsData summaryType(String summaryType) {
    this.summaryType = summaryType;
    return this;
  }

   /**
   * Get summaryType
   * @return summaryType
  **/
  @Schema(description = "")
  public String getSummaryType() {
    return summaryType;
  }

  public void setSummaryType(String summaryType) {
    this.summaryType = summaryType;
  }

  public InstrumentsData symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public InstrumentsData tradableAs(List<String> tradableAs) {
    this.tradableAs = tradableAs;
    return this;
  }

  public InstrumentsData addTradableAsItem(String tradableAsItem) {
    if (this.tradableAs == null) {
      this.tradableAs = new ArrayList<String>();
    }
    this.tradableAs.add(tradableAsItem);
    return this;
  }

   /**
   * Get tradableAs
   * @return tradableAs
  **/
  @Schema(description = "")
  public List<String> getTradableAs() {
    return tradableAs;
  }

  public void setTradableAs(List<String> tradableAs) {
    this.tradableAs = tradableAs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstrumentsData instrumentsData = (InstrumentsData) o;
    return Objects.equals(this.assetType, instrumentsData.assetType) &&
        Objects.equals(this.currencyCode, instrumentsData.currencyCode) &&
        Objects.equals(this.description, instrumentsData.description) &&
        Objects.equals(this.exchangeId, instrumentsData.exchangeId) &&
        Objects.equals(this.groupId, instrumentsData.groupId) &&
        Objects.equals(this.identifier, instrumentsData.identifier) &&
        Objects.equals(this.summaryType, instrumentsData.summaryType) &&
        Objects.equals(this.symbol, instrumentsData.symbol) &&
        Objects.equals(this.tradableAs, instrumentsData.tradableAs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetType, currencyCode, description, exchangeId, groupId, identifier, summaryType, symbol, tradableAs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstrumentsData {\n");
    
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    exchangeId: ").append(toIndentedString(exchangeId)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    summaryType: ").append(toIndentedString(summaryType)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    tradableAs: ").append(toIndentedString(tradableAs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
