/*
 * Saxobank trading API
 * Saxobank trading API
 *
 * OpenAPI spec version: 0.1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package saxobank.home.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * NetPositionsMeNetPositionBase
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T18:24:56.181779897Z[GMT]")

public class NetPositionsMeNetPositionBase {
  @SerializedName("Amount")
  private BigDecimal amount = null;

  @SerializedName("AmountLong")
  private BigDecimal amountLong = null;

  @SerializedName("AmountShort")
  private BigDecimal amountShort = null;

  @SerializedName("AssetType")
  private String assetType = null;

  @SerializedName("CanBeClosed")
  private Boolean canBeClosed = null;

  @SerializedName("ClientId")
  private String clientId = null;

  @SerializedName("HasForceOpenPositions")
  private Boolean hasForceOpenPositions = null;

  @SerializedName("IsMarketOpen")
  private Boolean isMarketOpen = null;

  @SerializedName("MarketState")
  private String marketState = null;

  @SerializedName("NonTradableReason")
  private String nonTradableReason = null;

  @SerializedName("NumberOfRelatedOrders")
  private Integer numberOfRelatedOrders = null;

  @SerializedName("OpeningDirection")
  private String openingDirection = null;

  @SerializedName("OpenIpoOrdersCount")
  private Integer openIpoOrdersCount = null;

  @SerializedName("OpenOrdersCount")
  private Integer openOrdersCount = null;

  @SerializedName("OpenTriggerOrdersCount")
  private Integer openTriggerOrdersCount = null;

  @SerializedName("PositionsAccount")
  private String positionsAccount = null;

  @SerializedName("SinglePositionId")
  private String singlePositionId = null;

  @SerializedName("SinglePositionStatus")
  private String singlePositionStatus = null;

  @SerializedName("TradingStatus")
  private String tradingStatus = null;

  @SerializedName("Uic")
  private Long uic = null;

  @SerializedName("ValueDate")
  private String valueDate = null;

  public NetPositionsMeNetPositionBase amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(description = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public NetPositionsMeNetPositionBase amountLong(BigDecimal amountLong) {
    this.amountLong = amountLong;
    return this;
  }

   /**
   * Get amountLong
   * @return amountLong
  **/
  @Schema(description = "")
  public BigDecimal getAmountLong() {
    return amountLong;
  }

  public void setAmountLong(BigDecimal amountLong) {
    this.amountLong = amountLong;
  }

  public NetPositionsMeNetPositionBase amountShort(BigDecimal amountShort) {
    this.amountShort = amountShort;
    return this;
  }

   /**
   * Get amountShort
   * @return amountShort
  **/
  @Schema(description = "")
  public BigDecimal getAmountShort() {
    return amountShort;
  }

  public void setAmountShort(BigDecimal amountShort) {
    this.amountShort = amountShort;
  }

  public NetPositionsMeNetPositionBase assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @Schema(description = "")
  public String getAssetType() {
    return assetType;
  }

  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }

  public NetPositionsMeNetPositionBase canBeClosed(Boolean canBeClosed) {
    this.canBeClosed = canBeClosed;
    return this;
  }

   /**
   * Get canBeClosed
   * @return canBeClosed
  **/
  @Schema(description = "")
  public Boolean isCanBeClosed() {
    return canBeClosed;
  }

  public void setCanBeClosed(Boolean canBeClosed) {
    this.canBeClosed = canBeClosed;
  }

  public NetPositionsMeNetPositionBase clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public NetPositionsMeNetPositionBase hasForceOpenPositions(Boolean hasForceOpenPositions) {
    this.hasForceOpenPositions = hasForceOpenPositions;
    return this;
  }

   /**
   * Get hasForceOpenPositions
   * @return hasForceOpenPositions
  **/
  @Schema(description = "")
  public Boolean isHasForceOpenPositions() {
    return hasForceOpenPositions;
  }

  public void setHasForceOpenPositions(Boolean hasForceOpenPositions) {
    this.hasForceOpenPositions = hasForceOpenPositions;
  }

  public NetPositionsMeNetPositionBase isMarketOpen(Boolean isMarketOpen) {
    this.isMarketOpen = isMarketOpen;
    return this;
  }

   /**
   * Get isMarketOpen
   * @return isMarketOpen
  **/
  @Schema(description = "")
  public Boolean isIsMarketOpen() {
    return isMarketOpen;
  }

  public void setIsMarketOpen(Boolean isMarketOpen) {
    this.isMarketOpen = isMarketOpen;
  }

  public NetPositionsMeNetPositionBase marketState(String marketState) {
    this.marketState = marketState;
    return this;
  }

   /**
   * Get marketState
   * @return marketState
  **/
  @Schema(description = "")
  public String getMarketState() {
    return marketState;
  }

  public void setMarketState(String marketState) {
    this.marketState = marketState;
  }

  public NetPositionsMeNetPositionBase nonTradableReason(String nonTradableReason) {
    this.nonTradableReason = nonTradableReason;
    return this;
  }

   /**
   * Get nonTradableReason
   * @return nonTradableReason
  **/
  @Schema(description = "")
  public String getNonTradableReason() {
    return nonTradableReason;
  }

  public void setNonTradableReason(String nonTradableReason) {
    this.nonTradableReason = nonTradableReason;
  }

  public NetPositionsMeNetPositionBase numberOfRelatedOrders(Integer numberOfRelatedOrders) {
    this.numberOfRelatedOrders = numberOfRelatedOrders;
    return this;
  }

   /**
   * Get numberOfRelatedOrders
   * @return numberOfRelatedOrders
  **/
  @Schema(description = "")
  public Integer getNumberOfRelatedOrders() {
    return numberOfRelatedOrders;
  }

  public void setNumberOfRelatedOrders(Integer numberOfRelatedOrders) {
    this.numberOfRelatedOrders = numberOfRelatedOrders;
  }

  public NetPositionsMeNetPositionBase openingDirection(String openingDirection) {
    this.openingDirection = openingDirection;
    return this;
  }

   /**
   * Get openingDirection
   * @return openingDirection
  **/
  @Schema(description = "")
  public String getOpeningDirection() {
    return openingDirection;
  }

  public void setOpeningDirection(String openingDirection) {
    this.openingDirection = openingDirection;
  }

  public NetPositionsMeNetPositionBase openIpoOrdersCount(Integer openIpoOrdersCount) {
    this.openIpoOrdersCount = openIpoOrdersCount;
    return this;
  }

   /**
   * Get openIpoOrdersCount
   * @return openIpoOrdersCount
  **/
  @Schema(description = "")
  public Integer getOpenIpoOrdersCount() {
    return openIpoOrdersCount;
  }

  public void setOpenIpoOrdersCount(Integer openIpoOrdersCount) {
    this.openIpoOrdersCount = openIpoOrdersCount;
  }

  public NetPositionsMeNetPositionBase openOrdersCount(Integer openOrdersCount) {
    this.openOrdersCount = openOrdersCount;
    return this;
  }

   /**
   * Get openOrdersCount
   * @return openOrdersCount
  **/
  @Schema(description = "")
  public Integer getOpenOrdersCount() {
    return openOrdersCount;
  }

  public void setOpenOrdersCount(Integer openOrdersCount) {
    this.openOrdersCount = openOrdersCount;
  }

  public NetPositionsMeNetPositionBase openTriggerOrdersCount(Integer openTriggerOrdersCount) {
    this.openTriggerOrdersCount = openTriggerOrdersCount;
    return this;
  }

   /**
   * Get openTriggerOrdersCount
   * @return openTriggerOrdersCount
  **/
  @Schema(description = "")
  public Integer getOpenTriggerOrdersCount() {
    return openTriggerOrdersCount;
  }

  public void setOpenTriggerOrdersCount(Integer openTriggerOrdersCount) {
    this.openTriggerOrdersCount = openTriggerOrdersCount;
  }

  public NetPositionsMeNetPositionBase positionsAccount(String positionsAccount) {
    this.positionsAccount = positionsAccount;
    return this;
  }

   /**
   * Get positionsAccount
   * @return positionsAccount
  **/
  @Schema(description = "")
  public String getPositionsAccount() {
    return positionsAccount;
  }

  public void setPositionsAccount(String positionsAccount) {
    this.positionsAccount = positionsAccount;
  }

  public NetPositionsMeNetPositionBase singlePositionId(String singlePositionId) {
    this.singlePositionId = singlePositionId;
    return this;
  }

   /**
   * Get singlePositionId
   * @return singlePositionId
  **/
  @Schema(description = "")
  public String getSinglePositionId() {
    return singlePositionId;
  }

  public void setSinglePositionId(String singlePositionId) {
    this.singlePositionId = singlePositionId;
  }

  public NetPositionsMeNetPositionBase singlePositionStatus(String singlePositionStatus) {
    this.singlePositionStatus = singlePositionStatus;
    return this;
  }

   /**
   * Get singlePositionStatus
   * @return singlePositionStatus
  **/
  @Schema(description = "")
  public String getSinglePositionStatus() {
    return singlePositionStatus;
  }

  public void setSinglePositionStatus(String singlePositionStatus) {
    this.singlePositionStatus = singlePositionStatus;
  }

  public NetPositionsMeNetPositionBase tradingStatus(String tradingStatus) {
    this.tradingStatus = tradingStatus;
    return this;
  }

   /**
   * Get tradingStatus
   * @return tradingStatus
  **/
  @Schema(description = "")
  public String getTradingStatus() {
    return tradingStatus;
  }

  public void setTradingStatus(String tradingStatus) {
    this.tradingStatus = tradingStatus;
  }

  public NetPositionsMeNetPositionBase uic(Long uic) {
    this.uic = uic;
    return this;
  }

   /**
   * Get uic
   * @return uic
  **/
  @Schema(description = "")
  public Long getUic() {
    return uic;
  }

  public void setUic(Long uic) {
    this.uic = uic;
  }

  public NetPositionsMeNetPositionBase valueDate(String valueDate) {
    this.valueDate = valueDate;
    return this;
  }

   /**
   * Get valueDate
   * @return valueDate
  **/
  @Schema(description = "")
  public String getValueDate() {
    return valueDate;
  }

  public void setValueDate(String valueDate) {
    this.valueDate = valueDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetPositionsMeNetPositionBase netPositionsMeNetPositionBase = (NetPositionsMeNetPositionBase) o;
    return Objects.equals(this.amount, netPositionsMeNetPositionBase.amount) &&
        Objects.equals(this.amountLong, netPositionsMeNetPositionBase.amountLong) &&
        Objects.equals(this.amountShort, netPositionsMeNetPositionBase.amountShort) &&
        Objects.equals(this.assetType, netPositionsMeNetPositionBase.assetType) &&
        Objects.equals(this.canBeClosed, netPositionsMeNetPositionBase.canBeClosed) &&
        Objects.equals(this.clientId, netPositionsMeNetPositionBase.clientId) &&
        Objects.equals(this.hasForceOpenPositions, netPositionsMeNetPositionBase.hasForceOpenPositions) &&
        Objects.equals(this.isMarketOpen, netPositionsMeNetPositionBase.isMarketOpen) &&
        Objects.equals(this.marketState, netPositionsMeNetPositionBase.marketState) &&
        Objects.equals(this.nonTradableReason, netPositionsMeNetPositionBase.nonTradableReason) &&
        Objects.equals(this.numberOfRelatedOrders, netPositionsMeNetPositionBase.numberOfRelatedOrders) &&
        Objects.equals(this.openingDirection, netPositionsMeNetPositionBase.openingDirection) &&
        Objects.equals(this.openIpoOrdersCount, netPositionsMeNetPositionBase.openIpoOrdersCount) &&
        Objects.equals(this.openOrdersCount, netPositionsMeNetPositionBase.openOrdersCount) &&
        Objects.equals(this.openTriggerOrdersCount, netPositionsMeNetPositionBase.openTriggerOrdersCount) &&
        Objects.equals(this.positionsAccount, netPositionsMeNetPositionBase.positionsAccount) &&
        Objects.equals(this.singlePositionId, netPositionsMeNetPositionBase.singlePositionId) &&
        Objects.equals(this.singlePositionStatus, netPositionsMeNetPositionBase.singlePositionStatus) &&
        Objects.equals(this.tradingStatus, netPositionsMeNetPositionBase.tradingStatus) &&
        Objects.equals(this.uic, netPositionsMeNetPositionBase.uic) &&
        Objects.equals(this.valueDate, netPositionsMeNetPositionBase.valueDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, amountLong, amountShort, assetType, canBeClosed, clientId, hasForceOpenPositions, isMarketOpen, marketState, nonTradableReason, numberOfRelatedOrders, openingDirection, openIpoOrdersCount, openOrdersCount, openTriggerOrdersCount, positionsAccount, singlePositionId, singlePositionStatus, tradingStatus, uic, valueDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetPositionsMeNetPositionBase {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amountLong: ").append(toIndentedString(amountLong)).append("\n");
    sb.append("    amountShort: ").append(toIndentedString(amountShort)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    canBeClosed: ").append(toIndentedString(canBeClosed)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    hasForceOpenPositions: ").append(toIndentedString(hasForceOpenPositions)).append("\n");
    sb.append("    isMarketOpen: ").append(toIndentedString(isMarketOpen)).append("\n");
    sb.append("    marketState: ").append(toIndentedString(marketState)).append("\n");
    sb.append("    nonTradableReason: ").append(toIndentedString(nonTradableReason)).append("\n");
    sb.append("    numberOfRelatedOrders: ").append(toIndentedString(numberOfRelatedOrders)).append("\n");
    sb.append("    openingDirection: ").append(toIndentedString(openingDirection)).append("\n");
    sb.append("    openIpoOrdersCount: ").append(toIndentedString(openIpoOrdersCount)).append("\n");
    sb.append("    openOrdersCount: ").append(toIndentedString(openOrdersCount)).append("\n");
    sb.append("    openTriggerOrdersCount: ").append(toIndentedString(openTriggerOrdersCount)).append("\n");
    sb.append("    positionsAccount: ").append(toIndentedString(positionsAccount)).append("\n");
    sb.append("    singlePositionId: ").append(toIndentedString(singlePositionId)).append("\n");
    sb.append("    singlePositionStatus: ").append(toIndentedString(singlePositionStatus)).append("\n");
    sb.append("    tradingStatus: ").append(toIndentedString(tradingStatus)).append("\n");
    sb.append("    uic: ").append(toIndentedString(uic)).append("\n");
    sb.append("    valueDate: ").append(toIndentedString(valueDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
