/*
 * Saxobank trading API
 * Saxobank trading API
 *
 * OpenAPI spec version: 0.1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package saxobank.home.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InstrumentsDetailsRelatedOptionRootsEnhanced
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T18:24:56.181779897Z[GMT]")

public class InstrumentsDetailsRelatedOptionRootsEnhanced {
  @SerializedName("AssetType")
  private String assetType = null;

  @SerializedName("OptionRootId")
  private Long optionRootId = null;

  @SerializedName("SupportedStrategies")
  private List<String> supportedStrategies = null;

  public InstrumentsDetailsRelatedOptionRootsEnhanced assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @Schema(description = "")
  public String getAssetType() {
    return assetType;
  }

  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }

  public InstrumentsDetailsRelatedOptionRootsEnhanced optionRootId(Long optionRootId) {
    this.optionRootId = optionRootId;
    return this;
  }

   /**
   * Get optionRootId
   * @return optionRootId
  **/
  @Schema(description = "")
  public Long getOptionRootId() {
    return optionRootId;
  }

  public void setOptionRootId(Long optionRootId) {
    this.optionRootId = optionRootId;
  }

  public InstrumentsDetailsRelatedOptionRootsEnhanced supportedStrategies(List<String> supportedStrategies) {
    this.supportedStrategies = supportedStrategies;
    return this;
  }

  public InstrumentsDetailsRelatedOptionRootsEnhanced addSupportedStrategiesItem(String supportedStrategiesItem) {
    if (this.supportedStrategies == null) {
      this.supportedStrategies = new ArrayList<String>();
    }
    this.supportedStrategies.add(supportedStrategiesItem);
    return this;
  }

   /**
   * Get supportedStrategies
   * @return supportedStrategies
  **/
  @Schema(description = "")
  public List<String> getSupportedStrategies() {
    return supportedStrategies;
  }

  public void setSupportedStrategies(List<String> supportedStrategies) {
    this.supportedStrategies = supportedStrategies;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstrumentsDetailsRelatedOptionRootsEnhanced instrumentsDetailsRelatedOptionRootsEnhanced = (InstrumentsDetailsRelatedOptionRootsEnhanced) o;
    return Objects.equals(this.assetType, instrumentsDetailsRelatedOptionRootsEnhanced.assetType) &&
        Objects.equals(this.optionRootId, instrumentsDetailsRelatedOptionRootsEnhanced.optionRootId) &&
        Objects.equals(this.supportedStrategies, instrumentsDetailsRelatedOptionRootsEnhanced.supportedStrategies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetType, optionRootId, supportedStrategies);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstrumentsDetailsRelatedOptionRootsEnhanced {\n");
    
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    optionRootId: ").append(toIndentedString(optionRootId)).append("\n");
    sb.append("    supportedStrategies: ").append(toIndentedString(supportedStrategies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
