/*
 * Saxobank trading API
 * Saxobank trading API
 *
 * OpenAPI spec version: 0.1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package saxobank.home.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.v3.oas.annotations.media.Schema;
import saxobank.home.sdk.model.InfoPriceQuote;

import java.io.IOException;
/**
 * InfoPrice
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T18:24:56.181779897Z[GMT]")

public class InfoPrice {
  @SerializedName("AssetType")
  private String assetType = null;

  @SerializedName("LastUpdated")
  private String lastUpdated = null;

  @SerializedName("PriceSource")
  private String priceSource = null;

  @SerializedName("Quote")
  private InfoPriceQuote quote = null;

  @SerializedName("Uic")
  private Long uic = null;

  public InfoPrice assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @Schema(description = "")
  public String getAssetType() {
    return assetType;
  }

  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }

  public InfoPrice lastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @Schema(description = "")
  public String getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public InfoPrice priceSource(String priceSource) {
    this.priceSource = priceSource;
    return this;
  }

   /**
   * Get priceSource
   * @return priceSource
  **/
  @Schema(description = "")
  public String getPriceSource() {
    return priceSource;
  }

  public void setPriceSource(String priceSource) {
    this.priceSource = priceSource;
  }

  public InfoPrice quote(InfoPriceQuote quote) {
    this.quote = quote;
    return this;
  }

   /**
   * Get quote
   * @return quote
  **/
  @Schema(description = "")
  public InfoPriceQuote getQuote() {
    return quote;
  }

  public void setQuote(InfoPriceQuote quote) {
    this.quote = quote;
  }

  public InfoPrice uic(Long uic) {
    this.uic = uic;
    return this;
  }

   /**
   * Get uic
   * @return uic
  **/
  @Schema(description = "")
  public Long getUic() {
    return uic;
  }

  public void setUic(Long uic) {
    this.uic = uic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfoPrice infoPrice = (InfoPrice) o;
    return Objects.equals(this.assetType, infoPrice.assetType) &&
        Objects.equals(this.lastUpdated, infoPrice.lastUpdated) &&
        Objects.equals(this.priceSource, infoPrice.priceSource) &&
        Objects.equals(this.quote, infoPrice.quote) &&
        Objects.equals(this.uic, infoPrice.uic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetType, lastUpdated, priceSource, quote, uic);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfoPrice {\n");
    
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    priceSource: ").append(toIndentedString(priceSource)).append("\n");
    sb.append("    quote: ").append(toIndentedString(quote)).append("\n");
    sb.append("    uic: ").append(toIndentedString(uic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
